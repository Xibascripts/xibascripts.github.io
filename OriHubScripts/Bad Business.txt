loadstring(game:HttpGet('https://virtuallization.com/ori_lib.txt'))()

 local win = Window("Bad Business", Enum.KeyCode.F)
local main = win:addTab("Main")

local toggle = main:add(Toggle("Wall Bang", false))

toggle.changed:Connect(function()
    
  if toggle.value == true then
local wallbang = require(game:GetService("ReplicatedStorage").TS).Raycast
debug.setupvalue(wallbang.CastGeometryAndEnemies, 1, nil)
debug.setupvalue(wallbang.CastGeometryAndEnemies, 2, nil)
notificate({
	["text"] = "Enabled Wall Bang",
	["color"] = NotificationGreen,
	["duration"] = 1,
})
  else
local wallbang = require(game:GetService("ReplicatedStorage").TS).Raycast
debug.setupvalue(wallbang.CastGeometryAndEnemies, 1, game:GetService('Workspace').Geometry)
debug.setupvalue(wallbang.CastGeometryAndEnemies, 2, game:GetService('Workspace').Terrain)
notificate({
	["text"] = "Disabled Wall Bang",
	["color"] = NotificationError,
	["duration"] = 1,
})
  end
end)

if Drawing then -- If drawing lib
local esp = win:addTab("ESP")

    local ESP = loadstring(game:HttpGet("https://virtuallization.com/ESP%20Library.txt"))()

local Modules --Credits: Kiriot, if he alr had it up for samples then no point in making a new one
for i,v in pairs(getgc()) do
    if type(v) == "function" and islclosure(v) and not is_synapse_function(v) then
        local up = getupvalues(v)
        for i,v in pairs(up) do
            if type(v) == "table" and rawget(v, "Kitty") then
                local f = getrawmetatable(v).__index
                Modules = getupvalue(f, 1)
                break
            end
        end
    end
end

ESP.Overrides.GetTeam = function(p)
    return game.Teams:FindFirstChild(Modules.Teams:GetPlayerTeam(p))
end

ESP.Overrides.GetPlrFromChar = function(char)
    return Modules.Characters:GetPlayerFromCharacter(char)
end

ESP.Overrides.GetColor = function(char)
    local p = ESP:GetPlrFromChar(char)
    if p then
        local team = ESP:GetTeam(p)
        if team then
            return team.Color.Value
        end
    end
    return nil
end

local function CharAdded(char)
    local p = game.Players:FindFirstChild(char.Name) or ESP:GetPlrFromChar(char)
    if not p or p == game.Players.LocalPlayer then
        return
    end

    ESP:Add(char, {
        Name = p.Name,
        Player = p,
        PrimaryPart = char.PrimaryPart or char:WaitForChild("Root")
    })
end
workspace.Characters.ChildAdded:Connect(CharAdded)
for i,v in pairs(workspace.Characters:GetChildren()) do
    coroutine.wrap(CharAdded)(v)
end
ESP.Names = false
ESP.Boxes = false
ESP.Tracers = false

local toggle3 = esp:add(Toggle("ESP", false))

toggle3.changed:Connect(function()
    
  if toggle3.value == true then
ESP:Toggle(true)
notificate({
	["text"] = "Enabled ESP",
	["color"] = NotificationGreen,
	["duration"] = 1,
})
  else
ESP:Toggle(false)
notificate({
	["text"] = "Disabled ESP",
	["color"] = NotificationError,
	["duration"] = 1,
})
  end
end)


local toggledad = esp:add(Toggle("Team Color", false))

toggledad.changed:Connect(function()
    
  if toggledad.value == true then
ESP.TeamColor = true
notificate({
	["text"] = "Enabled Team Colors",
	["color"] = NotificationGreen,
	["duration"] = 1,
})
  else
ESP.TeamColor = false
notificate({
	["text"] = "Disabled Team Colors",
	["color"] = NotificationError,
	["duration"] = 1,
})
  end
end)

local toggle2 = esp:add(Toggle("Tracers", false))

toggle2.changed:Connect(function()
    
  if toggle2.value == true then
ESP.Tracers = true
notificate({
	["text"] = "Enabled Tracers",
	["color"] = NotificationGreen,
	["duration"] = 1,
})
  else
ESP.Tracers = false
notificate({
	["text"] = "Disabled Tracers",
	["color"] = NotificationError,
	["duration"] = 1,
})
  end
end)


local toggle3 = esp:add(Toggle("Boxes", false))

toggle3.changed:Connect(function()
    
  if toggle3.value == true then
ESP.Boxes = true
notificate({
	["text"] = "Enabled Boxes",
	["color"] = NotificationGreen,
	["duration"] = 1,
})
  else
ESP.Boxes = false
notificate({
	["text"] = "Disabled Boxes",
	["color"] = NotificationError,
	["duration"] = 1,
})
  end
end)

local toggle4 = esp:add(Toggle("Names", false))

toggle4.changed:Connect(function()
    
  if toggle4.value == true then
ESP.Names = true
notificate({
	["text"] = "Enabled Names",
	["color"] = NotificationGreen,
	["duration"] = 1,
})
  else
ESP.Names = false
notificate({
	["text"] = "Disabled Names",
	["color"] = NotificationError,
	["duration"] = 1,
})
  end
end)
end

win:selectTab("Main")