loadstring(game:HttpGet('https://virtuallization.com/ori_lib.txt'))()

 local win = Window("Bee Simulator", Enum.KeyCode.F)
 local main = win:addTab("Main")
 local plr = game.Players.LocalPlayer.Name

if Drawing then -- If drawing lib
local esp = win:addTab("ESP")

    local ESP = loadstring(game:HttpGet("https://virtuallization.com/ESP%20Library.txt"))()
ESP.Names = false
ESP.Boxes = false
ESP.Tracers = false

local toggle3 = esp:add(Toggle("ESP", false))

toggle3.changed:Connect(function()
    
  if toggle3.value == true then
ESP:Toggle(true)
notificate({
	["text"] = "Enabled ESP",
	["color"] = NotificationGreen,
	["duration"] = 1,
})
  else
ESP:Toggle(false)
notificate({
	["text"] = "Disabled ESP",
	["color"] = NotificationError,
	["duration"] = 1,
})
  end
end)


local toggledad = esp:add(Toggle("Team Color", false))

toggledad.changed:Connect(function()
    
  if toggledad.value == true then
ESP.TeamColor = true
notificate({
	["text"] = "Enabled Team Colors",
	["color"] = NotificationGreen,
	["duration"] = 1,
})
  else
ESP.TeamColor = false
notificate({
	["text"] = "Disabled Team Colors",
	["color"] = NotificationError,
	["duration"] = 1,
})
  end
end)

local toggle2 = esp:add(Toggle("Tracers", false))

toggle2.changed:Connect(function()
    
  if toggle2.value == true then
ESP.Tracers = true
notificate({
	["text"] = "Enabled Tracers",
	["color"] = NotificationGreen,
	["duration"] = 1,
})
  else
ESP.Tracers = false
notificate({
	["text"] = "Disabled Tracers",
	["color"] = NotificationError,
	["duration"] = 1,
})
  end
end)


local toggle3 = esp:add(Toggle("Boxes", false))

toggle3.changed:Connect(function()
    
  if toggle3.value == true then
ESP.Boxes = true
notificate({
	["text"] = "Enabled Boxes",
	["color"] = NotificationGreen,
	["duration"] = 1,
})
  else
ESP.Boxes = false
notificate({
	["text"] = "Disabled Boxes",
	["color"] = NotificationError,
	["duration"] = 1,
})
  end
end)

local toggle4 = esp:add(Toggle("Names", false))

toggle4.changed:Connect(function()
    
  if toggle4.value == true then
ESP.Names = true
notificate({
	["text"] = "Enabled Names",
	["color"] = NotificationGreen,
	["duration"] = 1,
})
  else
ESP.Names = false
notificate({
	["text"] = "Disabled Names",
	["color"] = NotificationError,
	["duration"] = 1,
})
  end
end)
end

local mkevisibledf = main:add(BindValue("Sell", Enum.KeyCode.R))
mkevisibledf.pressed:Connect(function()
local olderpost = game:GetService("Workspace").Players[plr].Root.CFrame
local NCFrame = game:GetService("Workspace").Worlds.Meadows["Sell Sign"].ThreeDTextObject.E.CFrame
local ts = game:GetService("TweenService")
local part = game:GetService("Workspace").Players[plr].Root
local ti = TweenInfo.new(0.2, Enum.EasingStyle.Linear)
local tp = {CFrame = NCFrame}
local anim = ts:Create(part, ti, tp)
anim:Play()
anim.Completed:Wait()
local NCFrame = game:GetService("Workspace").Worlds.Meadows["Sell Sign"].ThreeDTextObject.E.CFrame
local anim = ts:Create(part, ti, tp)
anim:Play()
anim.Completed:Wait()
local args = {
    [1] = workspace.Worlds.Meadows.Part
}

game:GetService("ReplicatedStorage").Events.Game.Sell:FireServer(unpack(args))
local NCFrame = olderpost
local anim = ts:Create(part, ti, tp)
anim:Play()
anim.Completed:Wait()
game:GetService("Workspace").Players[plr].Root.CFrame = olderpost
end)

local dasdadasdasdasdsdad = main:add(Toggle("Unlock All Areas (Fly Over)", false))

dasdadasdasdasdsdad.changed:Connect(function()
	if dasdadasdasdasdsdad.value == true then
game:GetService("Workspace").Border.Parent = game:GetService("Stats")
for i,v in pairs(game.Workspace:GetDescendants()) do
if v.Name == 'Border' then
	v.Parent = game:GetService("Stats")
end
end
	else
game:GetService("Stats").Border.Parent = game:GetService("Workspace")
for i,v in pairs(game.Stats:GetDescendants()) do
if v.Name == 'Border' then
	v.Parent = game:GetService("Workspace")
end
end
end
end)

win:selectTab("Main")