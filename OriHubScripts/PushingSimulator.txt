loadstring(game:HttpGet('https://virtuallization.com/ori_lib.txt'))()

local win = Window("Pushing Simulator", Enum.KeyCode.G)
local main = win:addTab("Main")
local fun = win:addTab("Fun")

if Drawing then -- If drawing lib
local esp = win:addTab("ESP")

    local ESP = loadstring(game:HttpGet("https://virtuallization.com/ESP%20Library.txt"))()
ESP.Names = false
ESP.Boxes = false
ESP.Tracers = false

local toggle3 = esp:add(Toggle("ESP", false))

toggle3.changed:Connect(function()
    
  if toggle3.value == true then
ESP:Toggle(true)
notificate({
	["text"] = "Enabled ESP",
	["color"] = NotificationGreen,
	["duration"] = 1,
})
  else
ESP:Toggle(false)
notificate({
	["text"] = "Disabled ESP",
	["color"] = NotificationError,
	["duration"] = 1,
})
  end
end)


local toggledad = esp:add(Toggle("Team Color", false))

toggledad.changed:Connect(function()
    
  if toggledad.value == true then
ESP.TeamColor = true
notificate({
	["text"] = "Enabled Team Colors",
	["color"] = NotificationGreen,
	["duration"] = 1,
})
  else
ESP.TeamColor = false
notificate({
	["text"] = "Disabled Team Colors",
	["color"] = NotificationError,
	["duration"] = 1,
})
  end
end)

local toggle2 = esp:add(Toggle("Tracers", false))

toggle2.changed:Connect(function()
    
  if toggle2.value == true then
ESP.Tracers = true
notificate({
	["text"] = "Enabled Tracers",
	["color"] = NotificationGreen,
	["duration"] = 1,
})
  else
ESP.Tracers = false
notificate({
	["text"] = "Disabled Tracers",
	["color"] = NotificationError,
	["duration"] = 1,
})
  end
end)


local toggle3 = esp:add(Toggle("Boxes", false))

toggle3.changed:Connect(function()
    
  if toggle3.value == true then
ESP.Boxes = true
notificate({
	["text"] = "Enabled Boxes",
	["color"] = NotificationGreen,
	["duration"] = 1,
})
  else
ESP.Boxes = false
notificate({
	["text"] = "Disabled Boxes",
	["color"] = NotificationError,
	["duration"] = 1,
})
  end
end)

local toggle4 = esp:add(Toggle("Names", false))

toggle4.changed:Connect(function()
    
  if toggle4.value == true then
ESP.Names = true
notificate({
	["text"] = "Enabled Names",
	["color"] = NotificationGreen,
	["duration"] = 1,
})
  else
ESP.Names = false
notificate({
	["text"] = "Disabled Names",
	["color"] = NotificationError,
	["duration"] = 1,
})
  end
end)
end


local toggle = main:add(Toggle("Force Field", false))

toggle.changed:Connect(function()
    
  if toggle.value == true then
notificate({
	["text"] = "Enabled Force Field",
	["color"] = NotificationGreen,
	["duration"] = 1,
})
_G.forcefield = true

while _G.forcefield do
wait()
local lp = game:GetService("Players").LocalPlayer
local char = lp.Character

local tool = char:FindFirstChild("Push") or lp.Backpack:FindFirstChild("Push")
local remote = tool:FindFirstChild("PushEvent")
    remote:FireServer()
end
  else
notificate({
	["text"] = "Disabled Force Field",
	["color"] = NotificationError,
	["duration"] = 1,
})
_G.forcefield = false

while _G.forcefield do
wait()
local lp = game:GetService("Players").LocalPlayer
local char = lp.Character

local tool = char:FindFirstChild("Push") or lp.Backpack:FindFirstChild("Push")
local remote = tool:FindFirstChild("PushEvent")
    remote:FireServer()
end
  end
end)


local toggle2 = main:add(BindValue("Super Push", Enum.KeyCode.R))
toggle2.pressed:Connect(function()
for i=1,36 do
local lp = game:GetService("Players").LocalPlayer
local char = lp.Character

local tool = char:FindFirstChild("Push") or lp.Backpack:FindFirstChild("Push")
local remote = tool:FindFirstChild("PushEvent")
    remote:FireServer()
end
end)

local toggle3 = main:add(BindValue("Push", Enum.KeyCode.E))
toggle3.pressed:Connect(function()
local lp = game:GetService("Players").LocalPlayer
local char = lp.Character

local tool = char:FindFirstChild("Push") or lp.Backpack:FindFirstChild("Push")
local remote = tool:FindFirstChild("PushEvent")
    remote:FireServer()
end)

--Fun Tab

local toggle5 = fun:add(Toggle("No Escape", false))

toggle5.changed:Connect(function()
    
  if toggle5.value == true then
notificate({
	["text"] = "Enabled No Escape",
	["color"] = NotificationGreen,
	["duration"] = 1,
})
_G.noescape = true

while _G.noescape do
wait()
for i,v in pairs(game.Players:GetPlayers()) do 
if v.Name~=game.Players.LocalPlayer.Name then 
game.ReplicatedStorage.Events.Jail:FireServer(v)
end
end

game.ReplicatedStorage.Events.Release:FireServer()
end
  else
notificate({
	["text"] = "Disabled No Escape",
	["color"] = NotificationError,
	["duration"] = 1,
})_G.noescape = false

while _G.noescape do
wait()
for i,v in pairs(game.Players:GetPlayers()) do 
if v.Name~=game.Players.LocalPlayer.Name then 
game.ReplicatedStorage.Events.Jail:FireServer(v)
end
end

game.ReplicatedStorage.Events.Release:FireServer()
end
end
end)

local button = fun:add(Button("Jail All"))
button.clicked:Connect(function()
for i,v in pairs(game.Players:GetPlayers()) do 
if v.Name~=game.Players.LocalPlayer.Name then 
game.ReplicatedStorage.Events.Jail:FireServer(v)
end
end
end)

local button2 = fun:add(Button("Release All"))
button2.clicked:Connect(function()
game.ReplicatedStorage.Events.Release:FireServer()
end)


local button3 = fun:add(Button("Jail Random Player"))
button3.clicked:Connect(function()
local randomPlayer = game.Players:GetPlayers()[math.random(1,#game.Players:GetPlayers())]
game.ReplicatedStorage.Events.Jail:FireServer(randomPlayer)
end)


local norags = main:add(Toggle("Anti Ragdoll", false))

norags.changed:Connect(function()
    
  if norags.value == true then
notificate({
	["text"] = "Enabled Anti Ragdoll",
	["color"] = NotificationGreen,
	["duration"] = 1,
})
game:GetService("Players").LocalPlayer.Character["Local Ragdoll"].Disabled = true
  else
notificate({
	["text"] = "Disabled Anti Ragdoll",
	["color"] = NotificationError,
	["duration"] = 1,
})
game:GetService("Players").LocalPlayer.Character["Local Ragdoll"].Disabled = false
end
end)

win:selectTab("Main")