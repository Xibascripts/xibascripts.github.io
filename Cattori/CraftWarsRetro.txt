loadstring(game:HttpGet('https://virtuallization.com/ori_lib.txt'))()

 local win = Window("Craft Wars Retro", Enum.KeyCode.F)
 local main = win:addTab("Main")

if Drawing then -- If drawing lib
local esp = win:addTab("ESP")

    local ESP = loadstring(game:HttpGet("https://virtuallization.com/ESP%20Library.txt"))()
ESP.Names = false
ESP.Boxes = false
ESP.Tracers = false

local toggle3 = esp:add(Toggle("ESP", false))

toggle3.changed:Connect(function()
    
  if toggle3.value == true then
ESP:Toggle(true)
notificate({
	["text"] = "Enabled ESP",
	["color"] = NotificationGreen,
	["duration"] = 1,
})
  else
ESP:Toggle(false)
notificate({
	["text"] = "Disabled ESP",
	["color"] = NotificationError,
	["duration"] = 1,
})
  end
end)


local toggledad = esp:add(Toggle("Team Color", false))

toggledad.changed:Connect(function()
    
  if toggledad.value == true then
ESP.TeamColor = true
notificate({
	["text"] = "Enabled Team Colors",
	["color"] = NotificationGreen,
	["duration"] = 1,
})
  else
ESP.TeamColor = false
notificate({
	["text"] = "Disabled Team Colors",
	["color"] = NotificationError,
	["duration"] = 1,
})
  end
end)

local toggle2 = esp:add(Toggle("Tracers", false))

toggle2.changed:Connect(function()
    
  if toggle2.value == true then
ESP.Tracers = true
notificate({
	["text"] = "Enabled Tracers",
	["color"] = NotificationGreen,
	["duration"] = 1,
})
  else
ESP.Tracers = false
notificate({
	["text"] = "Disabled Tracers",
	["color"] = NotificationError,
	["duration"] = 1,
})
  end
end)


local toggle3 = esp:add(Toggle("Boxes", false))

toggle3.changed:Connect(function()
    
  if toggle3.value == true then
ESP.Boxes = true
notificate({
	["text"] = "Enabled Boxes",
	["color"] = NotificationGreen,
	["duration"] = 1,
})
  else
ESP.Boxes = false
notificate({
	["text"] = "Disabled Boxes",
	["color"] = NotificationError,
	["duration"] = 1,
})
  end
end)

local toggle4 = esp:add(Toggle("Names", false))

toggle4.changed:Connect(function()
    
  if toggle4.value == true then
ESP.Names = true
notificate({
	["text"] = "Enabled Names",
	["color"] = NotificationGreen,
	["duration"] = 1,
})
  else
ESP.Names = false
notificate({
	["text"] = "Disabled Names",
	["color"] = NotificationError,
	["duration"] = 1,
})
  end
end)
end

local getallwep = main:add(Button("Get Every Item"))
getallwep.clicked:Connect(function()
count=0
for i=1,1000 do
count=count+1
game.Players.LocalPlayer.PlayerGui.Inventory.GuiControl:Invoke({command="insert", id = count})
end
end)

local pooralll = main:add(Button("Poor All"))
pooralll.clicked:Connect(function()
            local lp = game:GetService("Players").LocalPlayer
            
            for i, v in pairs(game:GetService("Players"):GetPlayers()) do
                local hum = v
                if hum and v ~= lp then
local remote = Game["ReplicatedStorage"]["MainControl"]
local args = {
   [1] = {
       command = "setvalue",
       value = 0,
       instance = hum["realstats"]["Cash"]
   }
}
remote:InvokeServer(unpack(args))
end
            end
end)

local richalles = main:add(Button("Rich All"))
richalles.clicked:Connect(function()
            local lp = game:GetService("Players").LocalPlayer
            
            for i, v in pairs(game:GetService("Players"):GetPlayers()) do
                local hum = v
                if hum and v ~= lp then
local remote = Game["ReplicatedStorage"]["MainControl"]
local args = {
   [1] = {
       command = "setvalue",
       value = math.huge,
       instance = hum["realstats"]["Cash"]
   }
}
remote:InvokeServer(unpack(args))
end
            end
end)

local debtall = main:add(Button("Debt All"))
debtall.clicked:Connect(function()
            local lp = game:GetService("Players").LocalPlayer
            
            for i, v in pairs(game:GetService("Players"):GetPlayers()) do
                local hum = v
                if hum and v ~= lp then
local remote = Game["ReplicatedStorage"]["MainControl"]
local args = {
   [1] = {
       command = "setvalue",
       value = -math.huge,
       instance = hum["realstats"]["Cash"]
   }
}
remote:InvokeServer(unpack(args))
end
            end
end)

local infomonyee = main:add(Button("Infinite Money"))
infomonyee.clicked:Connect(function()
local remote = Game["ReplicatedStorage"]["MainControl"]
local args = {
   [1] = {
       command = "setvalue",
       value = math.huge,
       instance = game:GetService("Players").LocalPlayer.realstats.Cash
   }
}
remote:InvokeServer(unpack(args))
end)

win:selectTab("Main")