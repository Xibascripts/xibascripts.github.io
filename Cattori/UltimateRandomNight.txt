-- Import UI lib
loadstring(game:HttpGet('https://virtuallization.com/ori_lib.txt'))()

-- Create window
local win = Window("Ultimate Random Night", Enum.KeyCode.F)

-- Create tabs
local main = win:addTab("Main")
local useTab = win:addTab("Trolling")

local errors = useTab:add(Toggle("Add All Errors", false))
errors.changed:Connect(function()
	if errors.value == true then
		game.ReplicatedStorage.ChangeGameValue:FireServer("Audio Error",true)
game.ReplicatedStorage.ChangeGameValue:FireServer("AC Error",true)
game.ReplicatedStorage.ChangeGameValue:FireServer("Camera Error",true)
game.ReplicatedStorage.ChangeGameValue:FireServer("Door Error",true)
	else
		game.ReplicatedStorage.ChangeGameValue:FireServer("Audio Error",false)
game.ReplicatedStorage.ChangeGameValue:FireServer("AC Error",false)
game.ReplicatedStorage.ChangeGameValue:FireServer("Camera Error",false)
game.ReplicatedStorage.ChangeGameValue:FireServer("Door Error",false)
	end
end)

local testilini = main:add(Toggle("Test Mode", false))
testilini.changed:Connect(function()
	if testilini.value == true then
game.ReplicatedStorage.ChangeGameValue:FireServer("TestMode",true)
	else
game.ReplicatedStorage.ChangeGameValue:FireServer("TestMode",false)
	end
end)

-- Remove guard power
local removePowerBTN = useTab:add(Button("Remove guard power"))
removePowerBTN.clicked:Connect(function()
	game.ReplicatedStorage.ChangeGameValue:FireServer("Power",false)
end)

-- Add Wins
local winnerr = main:add(NumberValue("Get Wins", 0))
winnerr.changed:Connect(function()
	local gameoveragainisacutie = winnerr.value
game:GetService("ReplicatedStorage").AddWins:FireServer(gameoveragainisacutie)
end)

local pointera = main:add(NumberValue("Get Wins", 0))
pointera.changed:Connect(function()
	local xibaiscoollmao = pointera.value
game:GetService("ReplicatedStorage").AddPoints:FireServer(xibaiscoollmao)
end)

-- Jumpscare guard
local jumpscareGuardBTN = useTab:add(Button("Jumpscare guard"))
jumpscareGuardBTN.clicked:Connect(function()
	game:GetService("ReplicatedStorage").CallToJumpscare:FireServer()
end)

local jumpscareGuardBTN2 = useTab:add(Button("Bon bon jumpscare"))
jumpscareGuardBTN2.clicked:Connect(function()
	game:GetService("ReplictedStorage").BonBonJumpscare:FireServer()
end)

local flickerem = useTab:add(Button("Flicker Office"))
flickerem.clicked:Connect(function()
	--Remote

local args = {
    [1] = math.huge
}

game:GetService("ReplicatedStorage").Flicker:FireServer(unpack(args))
end)

local flashibangie = useTab:add(Button("Flashbang All"))
flashibangie.clicked:Connect(function()
local position = game.Players.LocalPlayer.Character.HumanoidRootPart.Position
local SoundRemote = game:GetService("ReplicatedStorage").PlaySound
SoundRemote:FireServer(
"rbxassetid://2552682980",
0.5,
100,
CFrame.new(position)
)
wait(1.4)
local position = game.Players.LocalPlayer.Character.HumanoidRootPart.Position
local SoundRemote = game:GetService("ReplicatedStorage").PlaySound
SoundRemote:FireServer(
"rbxassetid://2552417180",
0.5,
100,
CFrame.new(position)
)
wait(0.4)
local position = game.Players.LocalPlayer.Character.HumanoidRootPart.Position
local SoundRemote = game:GetService("ReplicatedStorage").PlaySound
SoundRemote:FireServer(
"rbxassetid://2926571220",
0.5,
100,
CFrame.new(position)
)
      for i,v in pairs(game.Workspace:GetChildren()) do
            if v:FindFirstChild("Humanoid") then
                local bruv = v.Name
                local plr = game:GetService("Players").LocalPlayer.Name
                if bruv == plr then
                    else
local args = {
    [1] = game:GetService("Players")[bruv],
    [2] = 14
}

game:GetService("ReplicatedStorage").CallToBlackout:FireServer(unpack(args))
end
end
end
end)

local blackoutem = useTab:add(Button("Blind All"))
blackoutem.clicked:Connect(function()
      for i,v in pairs(game.Workspace:GetChildren()) do
            if v:FindFirstChild("Humanoid") then
                local bruv = v.Name
                local plr = game:GetService("Players").LocalPlayer.Name
                if bruv == plr then
                    else
local args = {
    [1] = game:GetService("Players")[bruv],
    [2] = 99999999999999999999999999
}

game:GetService("ReplicatedStorage").CallToBlackout:FireServer(unpack(args))
end
end
end
end)

-- Rick roll all
local rickrollAllBTN = useTab:add(Button("Rick Roll All"))
rickrollAllBTN.clicked:Connect(function()
	local position = game.Players.LocalPlayer.Character.HumanoidRootPart.Position
	local SoundRemote = game:GetService("ReplicatedStorage").PlaySound
	SoundRemote:FireServer("rbxassetid://4662452515", 0.5, 100, CFrame.new(position))
end)

-- Play audio
local playAudioBox = main:add(NumberValue("Audio", 0))
local playAudioBTN = main:add(Button("Play"))
playAudioBTN.clicked:Connect(function()
	local position = game.Players.LocalPlayer.Character.HumanoidRootPart.Position
	local SoundRemote = game:GetService("ReplicatedStorage").PlaySound
	SoundRemote:FireServer("rbxassetid://" .. playAudioBox.value, 0.5, 100, CFrame.new(position))
end)


if Drawing then -- If drawing lib
local esp = win:addTab("ESP")

    local ESP = loadstring(game:HttpGet("https://virtuallization.com/ESP%20Library.txt"))()
ESP.Names = false
ESP.Boxes = false
ESP.Tracers = false

local toggle3 = esp:add(Toggle("ESP", false))

toggle3.changed:Connect(function()
    
  if toggle3.value == true then
ESP:Toggle(true)
notificate({
	["text"] = "Enabled ESP",
	["color"] = NotificationGreen,
	["duration"] = 1,
})
  else
ESP:Toggle(false)
notificate({
	["text"] = "Disabled ESP",
	["color"] = NotificationError,
	["duration"] = 1,
})
  end
end)


local toggledad = esp:add(Toggle("Team Color", false))

toggledad.changed:Connect(function()
    
  if toggledad.value == true then
ESP.TeamColor = true
notificate({
	["text"] = "Enabled Team Colors",
	["color"] = NotificationGreen,
	["duration"] = 1,
})
  else
ESP.TeamColor = false
notificate({
	["text"] = "Disabled Team Colors",
	["color"] = NotificationError,
	["duration"] = 1,
})
  end
end)

local toggle2 = esp:add(Toggle("Tracers", false))

toggle2.changed:Connect(function()
    
  if toggle2.value == true then
ESP.Tracers = true
notificate({
	["text"] = "Enabled Tracers",
	["color"] = NotificationGreen,
	["duration"] = 1,
})
  else
ESP.Tracers = false
notificate({
	["text"] = "Disabled Tracers",
	["color"] = NotificationError,
	["duration"] = 1,
})
  end
end)


local toggle3 = esp:add(Toggle("Boxes", false))

toggle3.changed:Connect(function()
    
  if toggle3.value == true then
ESP.Boxes = true
notificate({
	["text"] = "Enabled Boxes",
	["color"] = NotificationGreen,
	["duration"] = 1,
})
  else
ESP.Boxes = false
notificate({
	["text"] = "Disabled Boxes",
	["color"] = NotificationError,
	["duration"] = 1,
})
  end
end)

local toggle4 = esp:add(Toggle("Names", false))

toggle4.changed:Connect(function()
    
  if toggle4.value == true then
ESP.Names = true
notificate({
	["text"] = "Enabled Names",
	["color"] = NotificationGreen,
	["duration"] = 1,
})
  else
ESP.Names = false
notificate({
	["text"] = "Disabled Names",
	["color"] = NotificationError,
	["duration"] = 1,
})
  end
end)
end

win:selectTab("Main")
