loadstring(game:HttpGet('https://virtuallization.com/ori_lib.txt'))()

 local win = Window("Glue Piece", Enum.KeyCode.G)
 local main = win:addTab("Main")

if Drawing then -- If drawing lib
local esp = win:addTab("ESP")

    local ESP = loadstring(game:HttpGet("https://virtuallization.com/ESP%20Library.txt"))()
ESP.Names = false
ESP.Boxes = false
ESP.Tracers = false

local toggle3 = esp:add(Toggle("ESP", false))

toggle3.changed:Connect(function()
    
  if toggle3.value == true then
ESP:Toggle(true)
notificate({
	["text"] = "Enabled ESP",
	["color"] = NotificationGreen,
	["duration"] = 1,
})
  else
ESP:Toggle(false)
notificate({
	["text"] = "Disabled ESP",
	["color"] = NotificationError,
	["duration"] = 1,
})
  end
end)


local toggledad = esp:add(Toggle("Team Color", false))

toggledad.changed:Connect(function()
    
  if toggledad.value == true then
ESP.TeamColor = true
notificate({
	["text"] = "Enabled Team Colors",
	["color"] = NotificationGreen,
	["duration"] = 1,
})
  else
ESP.TeamColor = false
notificate({
	["text"] = "Disabled Team Colors",
	["color"] = NotificationError,
	["duration"] = 1,
})
  end
end)

local toggle2 = esp:add(Toggle("Tracers", false))

toggle2.changed:Connect(function()
    
  if toggle2.value == true then
ESP.Tracers = true
notificate({
	["text"] = "Enabled Tracers",
	["color"] = NotificationGreen,
	["duration"] = 1,
})
  else
ESP.Tracers = false
notificate({
	["text"] = "Disabled Tracers",
	["color"] = NotificationError,
	["duration"] = 1,
})
  end
end)


local toggle3 = esp:add(Toggle("Boxes", false))

toggle3.changed:Connect(function()
    
  if toggle3.value == true then
ESP.Boxes = true
notificate({
	["text"] = "Enabled Boxes",
	["color"] = NotificationGreen,
	["duration"] = 1,
})
  else
ESP.Boxes = false
notificate({
	["text"] = "Disabled Boxes",
	["color"] = NotificationError,
	["duration"] = 1,
})
  end
end)

local toggle4 = esp:add(Toggle("Names", false))

toggle4.changed:Connect(function()
    
  if toggle4.value == true then
ESP.Names = true
notificate({
	["text"] = "Enabled Names",
	["color"] = NotificationGreen,
	["duration"] = 1,
})
  else
ESP.Names = false
notificate({
	["text"] = "Disabled Names",
	["color"] = NotificationError,
	["duration"] = 1,
})
  end
end)
end

local speedas = main:add(NumberValue("Walk Speed", 0))
speedas.changed:Connect(function()
game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = speedas.value
end)

local jumpowerions = main:add(NumberValue("Jump Power", 0))
jumpowerions.changed:Connect(function()
game.Players.LocalPlayer.Character.Humanoid.JumpPower = jumpowerions.value
end)

local getdfs = main:add(Toggle("Auto pick up Devil Fruits", false))

getdfs.changed:Connect(function()
	if getdfs.value == true then
autocollectdf2 = game:GetService("RunService").RenderStepped:Connect(function()
for i,v in pairs(game:GetService("Workspace"):GetChildren()) do
if v:IsA("Tool") then
local dfbring = v.Handle
dfbring.CFrame = game:GetService("Workspace")[game:GetService("Players").LocalPlayer.Name].HumanoidRootPart.CFrame
end
end
for i,v in pairs(game:GetService("Workspace").DF:GetChildren()) do
local dfbring = v.Handle
dfbring.CFrame = game:GetService("Workspace")[game:GetService("Players").LocalPlayer.Name].HumanoidRootPart.CFrame
end
end)
	else
autocollectdf2:Disconnect()
	end
end)


local dfsnotifierss = main:add(Toggle("Tool Spawn Notifier", false))

local function isFruit(inst)
if inst:IsA("Tool") then notificate({
    ["text"] = ("%s Has Spawned"):format(inst.Name),
    ["duration"] = 3, -- 3 seconds
    ["color"] = Color3.fromRGB(255, 73, 76), 
}) end
end

do
  local connection
  dfsnotifierss.changed:Connect(function()
    if dfsnotifierss.value then
      connection = workspace.DescendantAdded:Connect(isFruit)
    else
      connection:Disconnect()
      conection = nil
    end
  end)
end

win:selectTab("Main")