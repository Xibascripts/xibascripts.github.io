local lplr = game.Players.LocalPlayer
local camera = game:GetService("Workspace").CurrentCamera
local CurrentCamera = workspace.CurrentCamera
local worldToViewportPoint = CurrentCamera.worldToViewportPoint
local plr = game.Players.LocalPlayer
local players = game:GetService("Players")
local mouse = plr:GetMouse()
local camera = game.Workspace.CurrentCamera
local RainbowsESPEnabled = false
local HeadOff = Vector3.new(0,0.5,0)
local LegOff = Vector3.new(0,3,0)
local TeamCheckEnabled = false
local BoxEnabled = false
local TracerEnabled = false
local SilentAimEnabled = false
local NameEnabled = false
local SkeletonESPEnabled = false
local settings = {
	keybind = Enum.UserInputType.MouseButton2
}

local UIS = game:GetService("UserInputService")
local DiscordLib = loadstring(game:HttpGet"https://virtuallization.com/DiscordLibBackup.txt")()
local lplr = game.Players.LocalPlayer
local camera = game:GetService("Workspace").CurrentCamera
local CurrentCamera = workspace.CurrentCamera
local worldToViewportPoint = CurrentCamera.worldToViewportPoint
local plr = game.Players.LocalPlayer
local players = game:GetService("Players")
local mouse = plr:GetMouse()
local camera = game.Workspace.CurrentCamera
local RainbowsESPEnabled = false
local HeadOff = Vector3.new(0,0.5,0)
local LegOff = Vector3.new(0,3,0)
local TeamCheckEnabled = false
local BoxEnabled = false
local TracerEnabled = false
local SilentAimEnabled = false
local NameEnabled = false
local SkeletonESPEnabled = false
local settings = {
	keybind = Enum.UserInputType.MouseButton2
}

--SA AND AIM LOCK
local mt = getrawmetatable(game)
local namecallold = mt.__namecall
local index = mt.__index
setreadonly(mt, false)
mt.__namecall = newcclosure(function(self, ...)
    local args = {...}
    local method = getnamecallmethod()
    if tostring(self) == "new projectile" and tostring(method) == "FireServer" then
        if SilentAimEnabled then
            local A_1 = {
                [1] = {
                    [1] = ClosestPlayerToMouseHook().Character.Humanoid,
                    [2] = args[1][1][2],
                    [3] = 235,
                    [4] = ClosestPlayerToMouseHook().Character.Head.Position,
                    [5] = false,
                    [6] = false,
                    [7] = false
                },
                [2] = {
                    [1] = false,
                    [2] = false,
                    [3] = false,
                    [4] = false,
                    [5] = false,
                    [6] = 2,
                    [7] = 2
                }
            }
            game:GetService("Workspace")["__THINGS"]["__REMOTES"]["do damage"]:FireServer(A_1)
        end
    end
    return namecallold(self, ...)
end)
setreadonly(mt, true)

UIS.InputBegan:Connect(function(inp)
	if inp.UserInputType == settings.keybind then
		aiming = true
	end
end)
	
UIS.InputEnded:Connect(function(inp)
	if inp.UserInputType == settings.keybind then 
		aiming = false
	end
end)
	
game:GetService("RunService").RenderStepped:Connect(function()
	if aiming then
		camera.CFrame = CFrame.new(camera.CFrame.Position,ClosestPlayerToMouseHook2().Character.Head.Position)
	end
end)


local UIS = game:GetService("UserInputService")
local DiscordLib = loadstring(game:HttpGet"https://virtuallization.com/DiscordLibBackup.txt")()

local win = DiscordLib:Window("Cattori Hub")

local serv = win:Server("Big Paintball", "")

local tgls = serv:Channel("Main")

local taim = serv:Channel("Cheats")

local settings = {
	keybind = Enum.UserInputType.MouseButton2
}
local UIS = game:GetService("UserInputService")
local aiming = false 
local AimbotEnabled
local SilentAimTeamCheckEnabled

function ClosestPlayerToMouseHook()
    if not SilentAimEnabled then return end
    local target = nil
    local dist = math.huge
    if SilentAimTeamCheckEnabled then
        for i,v in pairs(game:GetService("Players"):GetPlayers()) do
            if v.Name ~= plr.Name then
                if v.Character and v.Character:FindFirstChild("Humanoid") and v.Character.Humanoid.Health ~= 0 and v.Team ~= plr.Team and SilentAimEnabled and v.Character:FindFirstChild("HumanoidRootPart") then
                    local screenpoint = camera:WorldToScreenPoint(v.Character.HumanoidRootPart.Position)
                    local check = (Vector2.new(mouse.X,mouse.Y)-Vector2.new(screenpoint.X,screenpoint.Y)).magnitude
                    if check < dist then
                        target  = v
                        dist = check
                    end
                end
            end
        end
    else
        for i,v in pairs(game:GetService("Players"):GetPlayers()) do
            if v.Name ~= plr.Name then
                if v.Character and v.Character:FindFirstChild("Humanoid") and v.Character.Humanoid.Health ~= 0 and SilentAimEnabled and v.Character:FindFirstChild("HumanoidRootPart") then
                    local screenpoint = camera:WorldToScreenPoint(v.Character.HumanoidRootPart.Position)
                    local check = (Vector2.new(mouse.X,mouse.Y)-Vector2.new(screenpoint.X,screenpoint.Y)).magnitude
                    if check < dist then
                        target  = v
                        dist = check
                    end
                end
            end
        end
    end
    return target 
end

function ClosestPlayerToMouseHook2()
    if not AimbotEnabled then return end
    local target = nil
    local dist = math.huge
    if TeamCheckEnabled then
        for i,v in pairs(game:GetService("Players"):GetPlayers()) do
            if v.Name ~= plr.Name then
                if v.Character and v.Character:FindFirstChild("Humanoid") and v.Character.Humanoid.Health ~= 0 and AimbotEnabled and v.Team ~= plr.Team and v.Character:FindFirstChild("HumanoidRootPart") then
                    local screenpoint = camera:WorldToScreenPoint(v.Character.HumanoidRootPart.Position)
                    local check = (Vector2.new(mouse.X,mouse.Y)-Vector2.new(screenpoint.X,screenpoint.Y)).magnitude
                    if check < dist then
                        target  = v
                        dist = check
                    end
                end
            end
        end
    else
        for i,v in pairs(game:GetService("Players"):GetPlayers()) do
            if v.Name ~= plr.Name then
                if v.Character and v.Character:FindFirstChild("Humanoid") and v.Character.Humanoid.Health ~= 0 and AimbotEnabled and v.Character:FindFirstChild("HumanoidRootPart") then
                    local screenpoint = camera:WorldToScreenPoint(v.Character.HumanoidRootPart.Position)
                    local check = (Vector2.new(mouse.X,mouse.Y)-Vector2.new(screenpoint.X,screenpoint.Y)).magnitude
                    if check < dist then
                        target  = v
                        dist = check
                    end
                end
            end
        end
    end
    return target 
end

tgls:Toggle("Noclip",false, function(bool)
if bool == true then
noclipstuffzss = game:GetService("RunService").RenderStepped:Connect(function()
game.Players.LocalPlayer.Character.Humanoid:ChangeState(11)
end)
	else
noclipstuffzss:Disconnect()
end
end)

tgls:Button("Unlock All", function()
--Modified, improvised
DiscordLib:Notification("Cattori", "Unlocked all Weapons", "Okay!")
    local Req = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"))
    Req.GunCmds.DoesOwnGun = function()
        return true
    end
    local RMTable = getrawmetatable(game)
    local runservice = game:GetService("RunService")
    local uis = game:GetService("UserInputService")
    setreadonly(RMTable, false)
    local on = false
    local namecall = RMTable.__namecall
    local function namecallfunction(self, ...)
        local args = {...}
        if getnamecallmethod() == "FireServer" then
            if tostring(self) == "request respawn" then
                if args[1] then
                    if args[1][1] then
                        args[1][1][1] = "1"
                    end
                end
            end
        end
        return namecall(self, unpack(args))
    end
    m.__namecall = namecallfunction
    setreadonly(m, true)
end)
tgls:Seperator()
local sldr = tgls:Slider("Walkspeed", 0, 1000, 0, function(b)
for i,v in pairs(getgc(true)) do 
    if type(v) == 'table' and rawget(v, 'additionalSpeed') then
        v.additionalSpeed = b
    end
end
end)

local sldr = tgls:Slider("Gravity", 0, 1000, 0, function(b)
workspace.Gravity = b
end)
local GunMods = serv:Channel("Gun Mods")

GunMods:Toggle("Automatic",false, function(bool)
if bool == true then
for i,v in pairs(getgc(true)) do 
    if type(v) == 'table' and rawget(v, 'velocity') then
        v.automatic = true
    end
end
        else
        for i,v in pairs(getgc(true)) do 
    if type(v) == 'table' and rawget(v, 'velocity') then
        v.automatic = false
    end
end
end
end)
GunMods:Seperator()
local sldr = GunMods:Slider("Fire Rate", 0, -10000, 0, function(h)
for i,v in pairs(getgc(true)) do 
    if type(v) == 'table' and rawget(v,'shotrate') then
        v.shotrate = h
    end
end
end)

local sldr = GunMods:Slider("Velocity", 0, 10000, 0, function(h)
for i,v in pairs(getgc(true)) do 
    if type(v) == 'table' and rawget(v, 'velocity') then
        v.velocity = h
    end
end
end)

local sldr = GunMods:Slider("Damage", 0, 10000, 0, function(h)
for i,v in pairs(getgc(true)) do 
    if type(v) == 'table' and rawget(v,'damage') then
        v.damage = h
    end
end
end)

taim:Toggle("Team Check", false, function(bool)
    SilentAimTeamCheckEnabled = bool
    TeamCheckEnabled = bool
end)
taim:Seperator()
taim:Toggle("Silent Aim", false, function(bool)
    SilentAimEnabled = bool
end)
taim:Toggle("Aimbot", false, function(bool)
    AimbotEnabled = bool
end)


if Drawing then
    local lplr = game.Players.LocalPlayer
    local camera = game:GetService("Workspace").CurrentCamera
    local CurrentCamera = workspace.CurrentCamera
    local worldToViewportPoint = CurrentCamera.worldToViewportPoint
    local plr = game.Players.LocalPlayer
    local players = game:GetService("Players")
    local mouse = plr:GetMouse()
    local camera = game.Workspace.CurrentCamera
    local RainbowsESPEnabled = false
    local HeadOff = Vector3.new(0, 0.5, 0)
    local LegOff = Vector3.new(0, 3, 0)
    local TeamCheckEnabled = false
    local BoxEnabled = false
    local TracerEnabled = false
    local SilentAimEnabled = false
    local NameEnabled = false
    local SkeletonESPEnabled = false

    local VisualsTab = serv:Channel("Visuals")
    VisualsTab:Toggle(
        "Box",
        false,
        function(bool)
            BoxEnabled = bool
        end
    )
    VisualsTab:Toggle(
        "Name",
        false,
        function(bool)
            NameEnabled = bool
        end
    )
    VisualsTab:Toggle(
        "Tracer",
        false,
        function(bool)
            TracerEnabled = bool
        end
    )
    VisualsTab:Seperator()
    local FOVEnabled = false
    VisualsTab:Toggle(
        "FOV",
        false,
        function(bool)
            FOVEnabled = bool
        end
    )
    local FOVSize = 300
    local FOVSizeSlider =
        VisualsTab:Slider(
        "FOV Size",
        100,
        600,
        300,
        function(value)
            FOVSize = value
        end
    )
    VisualsTab:Button(
        "Reset FOV Size",
        function()
            FOVSize = 300
            FOVSizeSlider:Change(300)
            DiscordLib:Notification("Cattori", "Reseted FOV Size", "Okay!")
        end
    )

    VisualsTab:Seperator()

    local CustomColor = false
    local ESPColor = Color3.fromRGB(255, 255, 255)
    local ESPColorOptionDrop =
        VisualsTab:Dropdown(
        "ESP Color Options",
        {"Custom Color", "Rainbow"},
        function(Current)
            if Current == "Custom Color" then
                CustomColor = true
                RainbowsESPEnabled = false
            else
                CustomColor = false
                RainbowsESPEnabled = true
            end
        end
    )
    VisualsTab:Colorpicker(
        "ESP Color",
        Color3.fromRGB(255, 255, 255),
        function(t)
            ESPColor = t
        end
    )
    VisualsTab:Toggle(
        "Team Check",
        false,
        function(bool)
            TeamCheckEnabled = bool
        end
    )

    local function CattoriESP(v)
        local BoxOutline = Drawing.new("Square")
        BoxOutline.Visible = false
        BoxOutline.Color = Color3.new(0, 0, 0)
        BoxOutline.Thickness = 3
        BoxOutline.Transparency = 1
        BoxOutline.Filled = false

        local Box = Drawing.new("Square")
        Box.Visible = false
        Box.Color = Color3.fromRGB(255, 255, 255)
        Box.Thickness = 1
        Box.Transparency = 1
        Box.Filled = false

        local HealthBarOutline = Drawing.new("Square")
        HealthBarOutline.Thickness = 3
        HealthBarOutline.Filled = false
        HealthBarOutline.Color = Color3.new(0, 0, 0)
        HealthBarOutline.Transparency = 1
        HealthBarOutline.Visible = false

        local HealthBar = Drawing.new("Square")
        HealthBar.Thickness = 1
        HealthBar.Filled = false
        HealthBar.Transparency = 1
        HealthBar.Visible = false

        local TracerOutline = Drawing.new("Line")
        TracerOutline.Visible = false
        TracerOutline.Color = Color3.new(0, 0, 0)
        TracerOutline.Thickness = 3
        TracerOutline.Transparency = 1

        local Tracer = Drawing.new("Line")
        Tracer.Visible = false
        Tracer.Color = Color3.fromRGB(255, 255, 255)
        Tracer.Thickness = 1
        Tracer.Transparency = 1

        local Name = Drawing.new("Text")
        Name.Transparency = 1
        Name.Visible = false
        Name.Color = Color3.fromRGB(255, 255, 255)
        Name.Size = 15
        Name.Center = true
        Name.Outline = true

        local FOVCircleOutline = Drawing.new("Circle")
        FOVCircleOutline.Thickness = 3
        FOVCircleOutline.Radius = 300
        FOVCircleOutline.NumSides = 12
        FOVCircleOutline.Color = Color3.new(0, 0, 0)
        FOVCircleOutline.Visible = false

        local FOVCircle = Drawing.new("Circle")
        FOVCircle.Thickness = 1
        FOVCircle.Radius = 300
        FOVCircle.NumSides = 12
        FOVCircle.Color = Color3.fromRGB(255, 255, 255)
        FOVCircle.Visible = false

        game:GetService("RunService").RenderStepped:Connect(
            function()
                if FOVEnabled then
                    FOVCircle.Visible = true
                    FOVCircleOutline.Visible = true
                    FOVCircle.Position = Vector2.new(mouse.X, mouse.Y + 36)
                    FOVCircleOutline.Position = Vector2.new(mouse.X, mouse.Y + 36)
                    FOVCircle.Radius = FOVSize
                    FOVCircleOutline.Radius = FOVSize
                    if RainbowsESPEnabled then
                        FOVCircle.Color = Color3.fromHSV(tick() % 5 / 5, 1, 1)
                    elseif CustomColor then
                        FOVCircle.Color = ESPColor
                    end
                else
                    FOVCircleOutline.Visible = false
                    FOVCircle.Visible = false
                end
                if
                    v.Character ~= nil and v.Character:FindFirstChild("Humanoid") ~= nil and
                        v.Character:FindFirstChild("HumanoidRootPart") ~= nil and
                        v.Character:FindFirstChild("Head") ~= nil and
                        v ~= lplr and
                        v.Character.Humanoid.Health > 0
                 then
                    local Vector, onScreen = camera:worldToViewportPoint(v.Character.HumanoidRootPart.Position)
                    local Distance = (CurrentCamera.CFrame.p - v.Character.HumanoidRootPart.Position).Magnitude
                    local RootPart = v.Character.HumanoidRootPart
                    local Head = v.Character.Head
                    local RootPosition, RootVis = worldToViewportPoint(CurrentCamera, RootPart.Position)
                    local HeadPosition = worldToViewportPoint(CurrentCamera, Head.Position + HeadOff)
                    local LegPosition = worldToViewportPoint(CurrentCamera, RootPart.Position - LegOff)

                    if onScreen then
                        if BoxEnabled then
                            BoxOutline.Size = Vector2.new(2000 / RootPosition.Z, HeadPosition.Y - LegPosition.Y)
                            BoxOutline.Position =
                                Vector2.new(
                                RootPosition.X - BoxOutline.Size.X / 2,
                                RootPosition.Y - BoxOutline.Size.Y / 2
                            )
                            BoxOutline.Visible = true

                            Box.Size = Vector2.new(2000 / RootPosition.Z, HeadPosition.Y - LegPosition.Y)
                            Box.Position = Vector2.new(RootPosition.X - Box.Size.X / 2, RootPosition.Y - Box.Size.Y / 2)
                            Box.Visible = true

                            HealthBarOutline.Size = Vector2.new(2, HeadPosition.Y - LegPosition.Y)
                            HealthBarOutline.Position = BoxOutline.Position - Vector2.new(6, 0)
                            HealthBarOutline.Visible = true

                            HealthBar.Size =
                                Vector2.new(
                                2,
                                (HeadPosition.Y - LegPosition.Y) /
                                    (v.Character.Humanoid.MaxHealth /
                                        math.clamp(v.Character.Humanoid.Health, 0, v.Character.Humanoid.MaxHealth))
                            )
                            HealthBar.Position =
                                Vector2.new(Box.Position.X - 6, Box.Position.Y + (1 / HealthBar.Size.Y))
                            HealthBar.Color =
                                Color3.fromRGB(
                                255 - 255 / (v.Character.Humanoid.MaxHealth / v.Character.Humanoid.Health),
                                255 / (v.Character.Humanoid.MaxHealth / v.Character.Humanoid.Health),
                                0
                            )
                            HealthBar.Visible = true
                            if v.TeamColor == lplr.TeamColor then
                                if TeamCheckEnabled then
                                    HealthBarOutline.Visible = false
                                    HealthBar.Visible = false
                                end
                            else
                                HealthBarOutline.Visible = true
                                HealthBar.Visible = true
                            end
                            if RainbowsESPEnabled then
                                Box.Color = Color3.fromHSV(tick() % 5 / 5, 1, 1)
                            elseif CustomColor then
                                Box.Color = ESPColor
                            end
                            if v.TeamColor == lplr.TeamColor then
                                if TeamCheckEnabled then
                                    BoxOutline.Visible = false
                                    Box.Visible = false
                                end
                            else
                                BoxOutline.Visible = true
                                Box.Visible = true
                            end
                        else
                            BoxOutline.Visible = false
                            Box.Visible = false
                            HealthBarOutline.Visible = false
                            HealthBar.Visible = false
                        end
                        if TracerEnabled then
                            TracerOutline.From = Vector2.new(camera.ViewportSize.X / 2, camera.ViewportSize.Y / 1)
                            TracerOutline.To = Vector2.new(Vector.X, Vector.Y)
                            TracerOutline.Visible = true
                            Tracer.From = Vector2.new(camera.ViewportSize.X / 2, camera.ViewportSize.Y / 1)
                            Tracer.To = Vector2.new(Vector.X, Vector.Y)
                            Tracer.Visible = true
                            if RainbowsESPEnabled then
                                Tracer.Color = Color3.fromHSV(tick() % 5 / 5, 1, 1)
                            elseif CustomColor then
                                Tracer.Color = ESPColor
                            end
                            if v.TeamColor == lplr.TeamColor then
                                if TeamCheckEnabled then
                                    TracerOutline.Visible = false
                                    Tracer.Visible = false
                                end
                            else
                                TracerOutline.Visible = true
                                Tracer.Visible = true
                            end
                        else
                            TracerOutline.Visible = false
                            Tracer.Visible = false
                        end
                        if NameEnabled then
                            Name.Text =
                                tostring(
                                "[" ..
                                    math.floor(Distance) ..
                                        "] " ..
                                            v.Name ..
                                                " [" ..
                                                    math.floor(v.Character.Humanoid.MaxHealth) ..
                                                        "/" .. math.floor(v.Character.Humanoid.Health) .. "]"
                            )
                            Name.Position =
                                Vector2.new(
                                RootPosition.X - BoxOutline.Size.X / 2,
                                RootPosition.Y - BoxOutline.Size.Y / 2
                            )
                            Name.Size = 16
                            Name.Visible = true
                            if RainbowsESPEnabled then
                                Name.Color = Color3.fromHSV(tick() % 5 / 5, 1, 1)
                            elseif CustomColor then
                                Name.Color = ESPColor
                            end
                            if v.TeamColor == lplr.TeamColor then
                                if TeamCheckEnabled then
                                    Name.Visible = false
                                end
                            else
                                Name.Visible = true
                            end
                        else
                            Name.Visible = false
                        end
                    else
                        BoxOutline.Visible = false
                        Box.Visible = false
                        HealthBarOutline.Visible = false
                        HealthBar.Visible = false
                        TracerOutline.Visible = false
                        Tracer.Visible = false
                        Name.Visible = false
                    end
                else
                    BoxOutline.Visible = false
                    Box.Visible = false
                    HealthBarOutline.Visible = false
                    HealthBar.Visible = false
                    TracerOutline.Visible = false
                    Tracer.Visible = false
                    Name.Visible = false
                end
            end
        )
    end

    for i, v in pairs(game.Players:GetChildren()) do
        CattoriESP(v)
    end

    game.Players.PlayerAdded:Connect(
        function(v)
            CattoriESP(v)
        end
    )
end
local win = DiscordLib:Window("Cattori Hub")

local serv = win:Server("Big Paintball", "")

local tgls = serv:Channel("Main")

local taim = serv:Channel("Aiming")

local settings = {
	keybind = Enum.UserInputType.MouseButton2
}
local UIS = game:GetService("UserInputService")
local aiming = false 
local AimbotEnabled
local SilentAimTeamCheckEnabled

function ClosestPlayerToMouseHook()
    if not SilentAimEnabled then return end
    local target = nil
    local dist = math.huge
    if SilentAimTeamCheckEnabled then
        for i,v in pairs(game:GetService("Players"):GetPlayers()) do
            if v.Name ~= plr.Name then
                if v.Character and v.Character:FindFirstChild("Humanoid") and v.Character.Humanoid.Health ~= 0 and v.Team ~= plr.Team and SilentAimEnabled and v.Character:FindFirstChild("HumanoidRootPart") then
                    local screenpoint = camera:WorldToScreenPoint(v.Character.HumanoidRootPart.Position)
                    local check = (Vector2.new(mouse.X,mouse.Y)-Vector2.new(screenpoint.X,screenpoint.Y)).magnitude
                    if check < dist then
                        target  = v
                        dist = check
                    end
                end
            end
        end
    else
        for i,v in pairs(game:GetService("Players"):GetPlayers()) do
            if v.Name ~= plr.Name then
                if v.Character and v.Character:FindFirstChild("Humanoid") and v.Character.Humanoid.Health ~= 0 and SilentAimEnabled and v.Character:FindFirstChild("HumanoidRootPart") then
                    local screenpoint = camera:WorldToScreenPoint(v.Character.HumanoidRootPart.Position)
                    local check = (Vector2.new(mouse.X,mouse.Y)-Vector2.new(screenpoint.X,screenpoint.Y)).magnitude
                    if check < dist then
                        target  = v
                        dist = check
                    end
                end
            end
        end
    end
    return target 
end

function ClosestPlayerToMouseHook2()
    if not AimbotEnabled then return end
    local target = nil
    local dist = math.huge
    if TeamCheckEnabled then
        for i,v in pairs(game:GetService("Players"):GetPlayers()) do
            if v.Name ~= plr.Name then
                if v.Character and v.Character:FindFirstChild("Humanoid") and v.Character.Humanoid.Health ~= 0 and AimbotEnabled and v.Team ~= plr.Team and v.Character:FindFirstChild("HumanoidRootPart") then
                    local screenpoint = camera:WorldToScreenPoint(v.Character.HumanoidRootPart.Position)
                    local check = (Vector2.new(mouse.X,mouse.Y)-Vector2.new(screenpoint.X,screenpoint.Y)).magnitude
                    if check < dist then
                        target  = v
                        dist = check
                    end
                end
            end
        end
    else
        for i,v in pairs(game:GetService("Players"):GetPlayers()) do
            if v.Name ~= plr.Name then
                if v.Character and v.Character:FindFirstChild("Humanoid") and v.Character.Humanoid.Health ~= 0 and AimbotEnabled and v.Character:FindFirstChild("HumanoidRootPart") then
                    local screenpoint = camera:WorldToScreenPoint(v.Character.HumanoidRootPart.Position)
                    local check = (Vector2.new(mouse.X,mouse.Y)-Vector2.new(screenpoint.X,screenpoint.Y)).magnitude
                    if check < dist then
                        target  = v
                        dist = check
                    end
                end
            end
        end
    end
    return target 
end

tgls:Toggle("Noclip",false, function(bool)
if bool == true then
noclipstuffzss = game:GetService("RunService").RenderStepped:Connect(function()
game.Players.LocalPlayer.Character.Humanoid:ChangeState(11)
end)
	else
noclipstuffzss:Disconnect()
end
end)

tgls:Button("Unlock All", function()
DiscordLib:Notification("Cattori", "Unlocked all Weapons", "Okay!")
    if unlockedgun then return end
    local kek = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"))
    kek.GunCmds.DoesOwnGun = function()
        return true
    end
    local mt1 = getrawmetatable(game)
    local namecallmod = mt1.__namecall
    setreadonly(mt1, false)
    mt1.__namecall = newcclosure(function(self,...)
        local args = {...}
        local method = getnamecallmethod()
        if tostring(self) == "request respawn" and tostring(method) == "FireServer" then
            if args[1] then
                if args[1][1] then
                    args[1][1][1] = "1"
                end
            end
        end
        return namecallmod(self, ...)
    end)
    setreadonly(mt1, true)
    unlockedgun = true
end)
tgls:Seperator()
local sldr = tgls:Slider("Walkspeed", 0, 1000, 0, function(b)
for i,v in pairs(getgc(true)) do 
    if type(v) == 'table' and rawget(v, 'additionalSpeed') then
        v.additionalSpeed = b
    end
end
end)

local sldr = tgls:Slider("Gravity", 0, 1000, 0, function(b)
workspace.Gravity = b
end)
local GunMods = serv:Channel("Gun Mods")

GunMods:Toggle("Automatic",false, function(bool)
if bool == true then
for i,v in pairs(getgc(true)) do 
    if type(v) == 'table' and rawget(v, 'velocity') then
        v.automatic = true
    end
end
        else
        for i,v in pairs(getgc(true)) do 
    if type(v) == 'table' and rawget(v, 'velocity') then
        v.automatic = false
    end
end
end
end)
GunMods:Seperator()
local sldr = GunMods:Slider("Fire Rate", 0, -10000, 0, function(h)
for i,v in pairs(getgc(true)) do 
    if type(v) == 'table' and rawget(v,'shotrate') then
        v.shotrate = h
    end
end
end)

local sldr = GunMods:Slider("Velocity", 0, 10000, 0, function(h)
for i,v in pairs(getgc(true)) do 
    if type(v) == 'table' and rawget(v, 'velocity') then
        v.velocity = h
    end
end
end)

local sldr = GunMods:Slider("Damage", 0, 10000, 0, function(h)
for i,v in pairs(getgc(true)) do 
    if type(v) == 'table' and rawget(v,'damage') then
        v.damage = h
    end
end
end)

local drop = taim:Dropdown("Mode",{"Silent Aim","Aimbot"}, function(boolene)
if boolene == "Silent Aim" then
SilentAimEnabled = true
AimbotEnabled = false
else
SilentAimEnabled = false
AimbotEnabled = true
end
end)
taim:Toggle("Team Check", false, function(boolieeeeeddd)
    SilentAimTeamCheckEnabled = boolieeeeeddd
    TeamCheckEnabled = boolieeeeeddd
end)
taim:Toggle("Enable", false, function(boolbool)
if boolbool == false then
SilentAimEnabled = false
AimbotEnabled = false
else
if boolene == "Silent Aim" then
SilentAimEnabled = true
AimbotEnabled = false
else
if boolene == "Aimbot" then
SilentAimEnabled = false
AimbotEnabled = true
else
end
end
end
end)


if Drawing then
    local lplr = game.Players.LocalPlayer
    local camera = game:GetService("Workspace").CurrentCamera
    local CurrentCamera = workspace.CurrentCamera
    local worldToViewportPoint = CurrentCamera.worldToViewportPoint
    local plr = game.Players.LocalPlayer
    local players = game:GetService("Players")
    local mouse = plr:GetMouse()
    local camera = game.Workspace.CurrentCamera
    local RainbowsESPEnabled = false
    local HeadOff = Vector3.new(0, 0.5, 0)
    local LegOff = Vector3.new(0, 3, 0)
    local TeamCheckEnabled = false
    local BoxEnabled = false
    local TracerEnabled = false
    local SilentAimEnabled = false
    local NameEnabled = false
    local SkeletonESPEnabled = false

    local VisualsTab = serv:Channel("Visuals")
    VisualsTab:Toggle(
        "Box",
        false,
        function(bool)
            BoxEnabled = bool
        end
    )
    VisualsTab:Toggle(
        "Name",
        false,
        function(bool)
            NameEnabled = bool
        end
    )
    VisualsTab:Toggle(
        "Tracer",
        false,
        function(bool)
            TracerEnabled = bool
        end
    )
    VisualsTab:Seperator()
    local FOVEnabled = false
    VisualsTab:Toggle(
        "FOV",
        false,
        function(bool)
            FOVEnabled = bool
        end
    )
    local FOVSize = 300
    local FOVSizeSlider =
        VisualsTab:Slider(
        "FOV Size",
        100,
        600,
        300,
        function(value)
            FOVSize = value
        end
    )
    VisualsTab:Button(
        "Reset FOV Size",
        function()
            FOVSize = 300
            FOVSizeSlider:Change(300)
            DiscordLib:Notification("Cattori", "Reseted FOV Size", "Okay!")
        end
    )

    VisualsTab:Seperator()

    local CustomColor = false
    local ESPColor = Color3.fromRGB(255, 255, 255)
    local ESPColorOptionDrop =
        VisualsTab:Dropdown(
        "ESP Color Options",
        {"Custom Color", "Rainbow"},
        function(Current)
            if Current == "Custom Color" then
                CustomColor = true
                RainbowsESPEnabled = false
            else
                CustomColor = false
                RainbowsESPEnabled = true
            end
        end
    )
    VisualsTab:Colorpicker(
        "ESP Color",
        Color3.fromRGB(255, 255, 255),
        function(t)
            ESPColor = t
        end
    )
    VisualsTab:Toggle(
        "Team Check",
        false,
        function(bool)
            TeamCheckEnabled = bool
        end
    )

    local function CattoriESP(v)
        local BoxOutline = Drawing.new("Square")
        BoxOutline.Visible = false
        BoxOutline.Color = Color3.new(0, 0, 0)
        BoxOutline.Thickness = 3
        BoxOutline.Transparency = 1
        BoxOutline.Filled = false

        local Box = Drawing.new("Square")
        Box.Visible = false
        Box.Color = Color3.fromRGB(255, 255, 255)
        Box.Thickness = 1
        Box.Transparency = 1
        Box.Filled = false

        local HealthBarOutline = Drawing.new("Square")
        HealthBarOutline.Thickness = 3
        HealthBarOutline.Filled = false
        HealthBarOutline.Color = Color3.new(0, 0, 0)
        HealthBarOutline.Transparency = 1
        HealthBarOutline.Visible = false

        local HealthBar = Drawing.new("Square")
        HealthBar.Thickness = 1
        HealthBar.Filled = false
        HealthBar.Transparency = 1
        HealthBar.Visible = false

        local TracerOutline = Drawing.new("Line")
        TracerOutline.Visible = false
        TracerOutline.Color = Color3.new(0, 0, 0)
        TracerOutline.Thickness = 3
        TracerOutline.Transparency = 1

        local Tracer = Drawing.new("Line")
        Tracer.Visible = false
        Tracer.Color = Color3.fromRGB(255, 255, 255)
        Tracer.Thickness = 1
        Tracer.Transparency = 1

        local Name = Drawing.new("Text")
        Name.Transparency = 1
        Name.Visible = false
        Name.Color = Color3.fromRGB(255, 255, 255)
        Name.Size = 15
        Name.Center = true
        Name.Outline = true

        local FOVCircleOutline = Drawing.new("Circle")
        FOVCircleOutline.Thickness = 3
        FOVCircleOutline.Radius = 300
        FOVCircleOutline.NumSides = 12
        FOVCircleOutline.Color = Color3.new(0, 0, 0)
        FOVCircleOutline.Visible = false

        local FOVCircle = Drawing.new("Circle")
        FOVCircle.Thickness = 1
        FOVCircle.Radius = 300
        FOVCircle.NumSides = 12
        FOVCircle.Color = Color3.fromRGB(255, 255, 255)
        FOVCircle.Visible = false

        game:GetService("RunService").RenderStepped:Connect(
            function()
                if FOVEnabled then
                    FOVCircle.Visible = true
                    FOVCircleOutline.Visible = true
                    FOVCircle.Position = Vector2.new(mouse.X, mouse.Y + 36)
                    FOVCircleOutline.Position = Vector2.new(mouse.X, mouse.Y + 36)
                    FOVCircle.Radius = FOVSize
                    FOVCircleOutline.Radius = FOVSize
                    if RainbowsESPEnabled then
                        FOVCircle.Color = Color3.fromHSV(tick() % 5 / 5, 1, 1)
                    elseif CustomColor then
                        FOVCircle.Color = ESPColor
                    end
                else
                    FOVCircleOutline.Visible = false
                    FOVCircle.Visible = false
                end
                if
                    v.Character ~= nil and v.Character:FindFirstChild("Humanoid") ~= nil and
                        v.Character:FindFirstChild("HumanoidRootPart") ~= nil and
                        v.Character:FindFirstChild("Head") ~= nil and
                        v ~= lplr and
                        v.Character.Humanoid.Health > 0
                 then
                    local Vector, onScreen = camera:worldToViewportPoint(v.Character.HumanoidRootPart.Position)
                    local Distance = (CurrentCamera.CFrame.p - v.Character.HumanoidRootPart.Position).Magnitude
                    local RootPart = v.Character.HumanoidRootPart
                    local Head = v.Character.Head
                    local RootPosition, RootVis = worldToViewportPoint(CurrentCamera, RootPart.Position)
                    local HeadPosition = worldToViewportPoint(CurrentCamera, Head.Position + HeadOff)
                    local LegPosition = worldToViewportPoint(CurrentCamera, RootPart.Position - LegOff)

                    if onScreen then
                        if BoxEnabled then
                            BoxOutline.Size = Vector2.new(2000 / RootPosition.Z, HeadPosition.Y - LegPosition.Y)
                            BoxOutline.Position =
                                Vector2.new(
                                RootPosition.X - BoxOutline.Size.X / 2,
                                RootPosition.Y - BoxOutline.Size.Y / 2
                            )
                            BoxOutline.Visible = true

                            Box.Size = Vector2.new(2000 / RootPosition.Z, HeadPosition.Y - LegPosition.Y)
                            Box.Position = Vector2.new(RootPosition.X - Box.Size.X / 2, RootPosition.Y - Box.Size.Y / 2)
                            Box.Visible = true

                            HealthBarOutline.Size = Vector2.new(2, HeadPosition.Y - LegPosition.Y)
                            HealthBarOutline.Position = BoxOutline.Position - Vector2.new(6, 0)
                            HealthBarOutline.Visible = true

                            HealthBar.Size =
                                Vector2.new(
                                2,
                                (HeadPosition.Y - LegPosition.Y) /
                                    (v.Character.Humanoid.MaxHealth /
                                        math.clamp(v.Character.Humanoid.Health, 0, v.Character.Humanoid.MaxHealth))
                            )
                            HealthBar.Position =
                                Vector2.new(Box.Position.X - 6, Box.Position.Y + (1 / HealthBar.Size.Y))
                            HealthBar.Color =
                                Color3.fromRGB(
                                255 - 255 / (v.Character.Humanoid.MaxHealth / v.Character.Humanoid.Health),
                                255 / (v.Character.Humanoid.MaxHealth / v.Character.Humanoid.Health),
                                0
                            )
                            HealthBar.Visible = true
                            if v.TeamColor == lplr.TeamColor then
                                if TeamCheckEnabled then
                                    HealthBarOutline.Visible = false
                                    HealthBar.Visible = false
                                end
                            else
                                HealthBarOutline.Visible = true
                                HealthBar.Visible = true
                            end
                            if RainbowsESPEnabled then
                                Box.Color = Color3.fromHSV(tick() % 5 / 5, 1, 1)
                            elseif CustomColor then
                                Box.Color = ESPColor
                            end
                            if v.TeamColor == lplr.TeamColor then
                                if TeamCheckEnabled then
                                    BoxOutline.Visible = false
                                    Box.Visible = false
                                end
                            else
                                BoxOutline.Visible = true
                                Box.Visible = true
                            end
                        else
                            BoxOutline.Visible = false
                            Box.Visible = false
                            HealthBarOutline.Visible = false
                            HealthBar.Visible = false
                        end
                        if TracerEnabled then
                            TracerOutline.From = Vector2.new(camera.ViewportSize.X / 2, camera.ViewportSize.Y / 1)
                            TracerOutline.To = Vector2.new(Vector.X, Vector.Y)
                            TracerOutline.Visible = true
                            Tracer.From = Vector2.new(camera.ViewportSize.X / 2, camera.ViewportSize.Y / 1)
                            Tracer.To = Vector2.new(Vector.X, Vector.Y)
                            Tracer.Visible = true
                            if RainbowsESPEnabled then
                                Tracer.Color = Color3.fromHSV(tick() % 5 / 5, 1, 1)
                            elseif CustomColor then
                                Tracer.Color = ESPColor
                            end
                            if v.TeamColor == lplr.TeamColor then
                                if TeamCheckEnabled then
                                    TracerOutline.Visible = false
                                    Tracer.Visible = false
                                end
                            else
                                TracerOutline.Visible = true
                                Tracer.Visible = true
                            end
                        else
                            TracerOutline.Visible = false
                            Tracer.Visible = false
                        end
                        if NameEnabled then
                            Name.Text =
                                tostring(
                                "[" ..
                                    math.floor(Distance) ..
                                        "] " ..
                                            v.Name ..
                                                " [" ..
                                                    math.floor(v.Character.Humanoid.MaxHealth) ..
                                                        "/" .. math.floor(v.Character.Humanoid.Health) .. "]"
                            )
                            Name.Position =
                                Vector2.new(
                                RootPosition.X - BoxOutline.Size.X / 2,
                                RootPosition.Y - BoxOutline.Size.Y / 2
                            )
                            Name.Size = 16
                            Name.Visible = true
                            if RainbowsESPEnabled then
                                Name.Color = Color3.fromHSV(tick() % 5 / 5, 1, 1)
                            elseif CustomColor then
                                Name.Color = ESPColor
                            end
                            if v.TeamColor == lplr.TeamColor then
                                if TeamCheckEnabled then
                                    Name.Visible = false
                                end
                            else
                                Name.Visible = true
                            end
                        else
                            Name.Visible = false
                        end
                    else
                        BoxOutline.Visible = false
                        Box.Visible = false
                        HealthBarOutline.Visible = false
                        HealthBar.Visible = false
                        TracerOutline.Visible = false
                        Tracer.Visible = false
                        Name.Visible = false
                    end
                else
                    BoxOutline.Visible = false
                    Box.Visible = false
                    HealthBarOutline.Visible = false
                    HealthBar.Visible = false
                    TracerOutline.Visible = false
                    Tracer.Visible = false
                    Name.Visible = false
                end
            end
        )
    end

    for i, v in pairs(game.Players:GetChildren()) do
        CattoriESP(v)
    end

    game.Players.PlayerAdded:Connect(
        function(v)
            CattoriESP(v)
        end
    )
end